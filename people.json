{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "https:",
  "resourcePath": "people",
  "apis": [
    {
      "path": "/api/v1/people",
      "operations": [
        {
          "summary": "Returns a collection of People settings.",
          "notes": "This lists all People settings. Include an offset to enable pagination.",
          "parameters": [
            {
              "paramType": "query",
              "name": "filter",
              "type": "string",
              "description": "filter",
              "required": false
            },
            {
              "paramType": "query",
              "name": "sort",
              "type": "string",
              "description": "sort",
              "required": false
            },
            {
              "paramType": "query",
              "name": "limit",
              "type": "integer",
              "description": "limit",
              "required": false
            },
            {
              "paramType": "query",
              "name": "offset",
              "type": "integer",
              "description": "offset",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "The request you made is not acceptable"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "Requested Range Not Satisfiable"
            }
          ],
          "nickname": "Api::V1::People#index",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v1/people",
      "operations": [
        {
          "summary": "Create a new Person.",
          "parameters": [
            {
              "paramType": "body",
              "name": "person",
              "type": "people",
              "description": "Create a new Person.",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            },
            {
              "code": 422,
              "responseModel": null,
              "message": "Unprocessable Entity"
            }
          ],
          "nickname": "Api::V1::People#create",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v1/people/{id}",
      "operations": [
        {
          "summary": "Returns a single Person setting.",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "string",
              "description": "Person ID",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            },
            {
              "code": 422,
              "responseModel": null,
              "message": "Unprocessable Entity"
            }
          ],
          "nickname": "Api::V1::People#show",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v1/people/{id}",
      "operations": [
        {
          "summary": "Update a Person setting (All fields are optional).",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "string",
              "description": "Person ID",
              "required": true
            },
            {
              "paramType": "body",
              "name": "person",
              "type": "people",
              "description": "Update a Person setting (All fields are optional).",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            },
            {
              "code": 422,
              "responseModel": null,
              "message": "Unprocessable Entity"
            }
          ],
          "nickname": "Api::V1::People#update",
          "method": "patch"
        }
      ]
    },
    {
      "path": "/api/v1/people/{id}",
      "operations": [
        {
          "summary": "Delete a Person.",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Person ID",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 422,
              "responseModel": null,
              "message": "Unprocessable Entity"
            }
          ],
          "nickname": "Api::V1::People#destroy",
          "method": "delete"
        }
      ]
    }
  ],
  "authorizations": null,
  "models": {
    "people": {
      "id": "people",
      "required": [
        "name",
        "username",
        "password",
        "role",
        "is_active"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Full Name"
        },
        "username": {
          "type": "string",
          "description": "Username"
        },
        "description": {
          "type": "string",
          "description": "description"
        },
        "provider": {
          "type": "string",
          "description": "User Directory, specify LDAP if remote"
        },
        "email": {
          "type": "string",
          "description": "Email"
        },
        "phone1": {
          "type": "string",
          "description": "Phone 1"
        },
        "phone2": {
          "type": "string",
          "description": "Phone 2"
        },
        "password": {
          "type": "string",
          "description": "Password"
        },
        "role": {
          "type": "string",
          "description": "Person's Role ( administrator, editor, viewer, remote)"
        },
        "is_active": {
          "type": "string",
          "description": "Boolean true or false to set Person's enable status"
        },
        "is_api_user": {
          "type": "string",
          "description": "Boolean true or false to enable/disable Person's api access"
        },
        "email_alert_level": {
          "type": "string",
          "description": "Level at which alerts should be emailed to user (Options: none, info, warning, error). Email server must be configured."
        }
      }
    }
  }
}