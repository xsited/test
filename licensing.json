{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "https:",
  "resourcePath": "licensing",
  "apis": [
    {
      "path": "/api/v1/licensing/sync_export",
      "operations": [
        {
          "summary": "Export a conductor sync package. Used to manually sync a conductor.",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "success"
            },
            {
              "code": 400,
              "responseModel": null,
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "Internal Server Error"
            }
          ],
          "nickname": "Api::V1::Licensing#sync_export",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v1/licensing/sync",
      "operations": [
        {
          "summary": "Synchronize your license data.",
          "notes": "Synchronize your license data with Tempered Networks.",
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "nickname": "Api::V1::Licensing#sync",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v1/licensing/sync_import",
      "operations": [
        {
          "summary": "Import a conductor sync package response. Used to manually sync a conductor.",
          "parameters": [
            {
              "paramType": "body",
              "name": "body",
              "type": "conductor_sync_package",
              "description": "For import and export of conductor sync packages.",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "Internal Server Error"
            }
          ],
          "nickname": "Api::V1::Licensing#sync_import",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v1/licensing/vouchers",
      "operations": [
        {
          "summary": "Returns a collection of vouchers.",
          "notes": "This is a list of vouchers.",
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "The request you made is not acceptable"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "Requested Range Not Satisfiable"
            }
          ],
          "nickname": "Api::V1::Licensing#get_vouchers",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v1/licensing/vouchers",
      "operations": [
        {
          "summary": "Add a licensing voucher.",
          "parameters": [
            {
              "paramType": "body",
              "name": "body",
              "type": "vouchers",
              "description": "Add a licensing voucher.",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "nickname": "Api::V1::Licensing#add_voucher",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v1/licensing/vouchers/{voucher_id}",
      "operations": [
        {
          "summary": "Returns a single voucher setting.",
          "parameters": [
            {
              "paramType": "path",
              "name": "voucher_id",
              "type": "string",
              "description": "Voucher ID",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "nickname": "Api::V1::Licensing#get_voucher",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v1/licensing/vouchers/{voucher_id}",
      "operations": [
        {
          "summary": "Delete a licensing voucher.",
          "parameters": [
            {
              "paramType": "path",
              "name": "voucher_id",
              "type": "integer",
              "description": "Voucher ID",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            }
          ],
          "nickname": "Api::V1::Licensing#delete_voucher",
          "method": "delete"
        }
      ]
    },
    {
      "path": "/api/v1/licensing/prov_requests",
      "operations": [
        {
          "summary": "Returns all pending provisioning requests.",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            }
          ],
          "nickname": "Api::V1::Licensing#get_prov_requests",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v1/licensing/prov_requests",
      "operations": [
        {
          "summary": "Grant or Deny a provisioning request.",
          "notes": "Grant or Deny a provisioning request by specifying true or false in the message body.",
          "parameters": [
            {
              "paramType": "body",
              "name": "body",
              "type": "prov_requests",
              "description": "Grant or Deny a provisioning request.",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "The request you made is not acceptable"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "Requested Range Not Satisfiable"
            }
          ],
          "nickname": "Api::V1::Licensing#grant_prov_requests",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v1/licensing/prov_requests/{license_id}",
      "operations": [
        {
          "summary": "Returns a single provisioning request.",
          "parameters": [

          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Unauthorized"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Not Found"
            },
            {
              "code": 406,
              "responseModel": null,
              "message": "Not Acceptable"
            }
          ],
          "nickname": "Api::V1::Licensing#get_prov_request",
          "method": "get"
        }
      ]
    }
  ],
  "authorizations": null,
  "models": {
    "vouchers": {
      "id": "vouchers",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "Tempered Networks voucher code."
        }
      }
    },
    "prov_requests": {
      "id": "prov_requests",
      "required": [
        "grant",
        "id"
      ],
      "properties": {
        "grant": {
          "type": "string",
          "description": "Boolean true or false to grant or deny a provisioning request."
        },
        "id": {
          "type": "array",
          "description": "An array of ID strings",
          "items": {
            "$ref": "string"
          }
        }
      }
    },
    "conductor_sync_package": {
      "id": "conductor_sync_package",
      "required": [
        "cert_subject",
        "key",
        "iv",
        "auth_data",
        "auth_tag",
        "data"
      ],
      "properties": {
        "cert_subject": {
          "type": "string",
          "description": "Auto-generated field. Do not modify."
        },
        "key": {
          "type": "string",
          "description": "Auto-generated field. Do not modify."
        },
        "iv": {
          "type": "string",
          "description": "Auto-generated field. Do not modify."
        },
        "auth_data": {
          "type": "string",
          "description": "Auto-generated field. Do not modify."
        },
        "auth_tag": {
          "type": "string",
          "description": "Auto-generated field. Do not modify."
        },
        "data": {
          "type": "string",
          "description": "Auto-generated field. Do not modify."
        }
      }
    }
  }
}